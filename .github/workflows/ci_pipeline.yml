name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Проверка исходного кода
      - name: Checkout repository
        uses: actions/checkout@v3

      # Логин в Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Сборка Docker-образа
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ml_service:latest .

      # Пуш Docker-образа в Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ml_service:latest

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Проверка исходного кода
      - name: Checkout repository
        uses: actions/checkout@v3

      # Установка Docker Compose
      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      # Запуск сервисов через docker-compose
      - name: Start MinIO and ML service
        run: docker-compose up -d

      # Проверка состояния MinIO
      - name: Wait for MinIO to be ready
        run: |
          for i in {1..10}; do
            curl -s http://localhost:9000/minio/health/live && break || sleep 3
          done
      # Установка Python и зависимостей
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.12'

      - name: Install dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      # Запуск тестов
      - name: Run app/conftest.py app/test_main.py
        run: pytest

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Проверка исходного кода
      - name: Checkout repository
        uses: actions/checkout@v3

      # Установка Python и зависимостей
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.12'

      - name: Install linters
        run: pip install flake8

      # Запуск линтеров
      - name: Run linters
        run: flake8 --ignore=E501,W503 app
